name: Update Scarab baseline

on:
  push:
    branches:
      - main          # runs once for every merge to main

permissions:
  contents: read      # checkout only; push uses SSH key

jobs:
  append-baseline:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}          # actions:read
      PERF_KEY: ${{ secrets.SCARAB_PERF_SSH_KEY }}   # write access to scarab_perf

    steps:
    - name: Check out merged commit
      uses: actions/checkout@v4

    # ─────────────────────────────────────────────────────────────
    # 1. Download the metrics artifact uploaded by the PR workflow
    # ─────────────────────────────────────────────────────────────
    - name: Fetch metrics artifact
      id: fetch
      run: |
        set -euo pipefail
        SHA="${{ github.sha }}"
        API="https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/artifacts"

        sudo apt-get -qq update
        sudo apt-get -qq install -y jq

        ARTIFACT_ID=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$API" |
          jq -r --arg NAME "metrics-$SHA" '.artifacts[] | select(.name==$NAME) | .id')

        if [ -z "$ARTIFACT_ID" ]; then
          echo "❌ Artifact metrics-$SHA not found" >&2
          exit 1
        fi

        DL_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/artifacts/${ARTIFACT_ID}/zip"
        curl -L -H "Authorization: Bearer $GH_TOKEN" -o metrics.zip "$DL_URL"
        unzip -q metrics.zip            # yields metrics_line.txt
        rm metrics.zip

        IFS=',' read PR_SHA IPC KIPS < metrics_line.txt
        echo "ipc=$IPC"   >> "$GITHUB_OUTPUT"
        echo "kips=$KIPS" >> "$GITHUB_OUTPUT"

    # ─────────────────────────────────────────────────────────────
    # 2. Append the line to scarab_perf.log and push
    # ─────────────────────────────────────────────────────────────
    - name: Append metrics line and push
      env:
        IPC:  ${{ steps.fetch.outputs.ipc }}
        KIPS: ${{ steps.fetch.outputs.kips }}
        SHA:  ${{ github.sha }}
      run: |
        git config --global user.name  "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        mkdir -p ~/.ssh
        echo "$PERF_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        git clone git@github.com:litz-lab/scarab_perf.git perf
        echo "${SHA},${IPC},${KIPS}" >> perf/scarab_perf.log
        cd perf
        git add scarab_perf.log
        git commit -m "Add perf result for ${SHA::7}"
        git push
